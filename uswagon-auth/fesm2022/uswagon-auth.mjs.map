{"version":3,"file":"uswagon-auth.mjs","sources":["../../../projects/uswagon-auth/src/lib/uswagon-auth.service.ts","../../../projects/uswagon-auth/src/lib/uswagon-login-button/uswagon-login-button.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-login-button/uswagon-login-button.component.html","../../../projects/uswagon-auth/src/lib/uswagon-auth-input/uswagon-auth-input.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-auth-input/uswagon-auth-input.component.html","../../../projects/uswagon-auth/src/lib/uswagon-auth-input-error/uswagon-auth-input-error.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-auth-input-error/uswagon-auth-input-error.component.html","../../../projects/uswagon-auth/src/lib/uswagon-remember-me/uswagon-remember-me.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-remember-me/uswagon-remember-me.component.html","../../../projects/uswagon-auth/src/lib/uswagon-register-button/uswagon-register-button.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-register-button/uswagon-register-button.component.html","../../../projects/uswagon-auth/src/lib/uswagon-auth-snackbar-close/uswagon-auth-snackbar-close.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-auth-snackbar-close/uswagon-auth-snackbar-close.component.html","../../../projects/uswagon-auth/src/lib/uswagon-auth-snackbar-container/uswagon-auth-snackbar-container.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-auth-snackbar-container/uswagon-auth-snackbar-container.component.html","../../../projects/uswagon-auth/src/lib/uswagon-auth-snackbar-content/uswagon-auth-snackbar-content.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-auth-snackbar-content/uswagon-auth-snackbar-content.component.html","../../../projects/uswagon-auth/src/lib/uswagon-logout-button/uswagon-logout-button.component.ts","../../../projects/uswagon-auth/src/lib/uswagon-logout-button/uswagon-logout-button.component.html","../../../projects/uswagon-auth/src/lib/uswagon-auth.module.ts","../../../projects/uswagon-auth/src/lib/types/uswagon-auth.types.ts","../../../projects/uswagon-auth/src/public-api.ts","../../../projects/uswagon-auth/src/uswagon-auth.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {  AuthConfig, AuthForm, AuthValidator, SnackbarFeedback,AuthMessages } from './types/uswagon-auth.types';\nimport { firstValueFrom } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UswagonAuthService {\n\n  public snackbarFeedback?:SnackbarFeedback;\n  public loading:boolean = false;\n\n  private usedStorage = this.isLocalStorage() ? localStorage : sessionStorage;\n  private config:AuthConfig|undefined;\n  private authForm:AuthForm = {};\n  private emailNotification:boolean = false;\n  private timeout:any;\n\n  private validators:AuthValidator = {\n    email: {\n      pattern: '^[\\\\w-.]+@[\\\\w-]+\\\\.[a-zA-Z]{2,}([.][a-zA-Z]{2,})*$',\n      message: 'Email is not valid.'\n    },\n    password: {\n        pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[!@#$%^&*])[A-Za-z\\\\d!@#$%^&*]{8,}$',\n        message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character.'\n    },\n    phone: {\n        pattern: '^(\\\\+\\\\d{1,3}\\\\s?)?\\\\(?\\\\d{3}\\\\)?[-\\\\s]?\\\\d{3}[-\\\\s]?\\\\d{4}$',\n        message: 'Phone number must be in a valid format.'\n    },\n    username: {\n      pattern: '^[a-zA-Z0-9]{3,15}$',\n      message: 'Username must be 3-15 characters long and can only contain letters and numbers.'\n    },\n    creditCard: {\n        pattern: '^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9]{2})[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|7[0-9]{15})$',\n        message: 'Invalid credit card number.'\n    },\n    postalCode: {\n      pattern: '^\\\\d{5}(-\\\\d{4})?$',\n      message: 'Postal code must be in the format 12345 or 12345-6789.'\n    },\n  };\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) { }\n  \n  /**\n     * Initialize the service for the project\n     * @param config - configuration that points the service to its appropriate server\n     * \n     * @example\n     * this.auth.initialize({\n     *  api:environment.api,\n     *  apiKey: environment.apiKey,\n     *  app: 'test-app',\n     *  registrationTable: 'teachers', // can be undefined login\n     *  loginTable: ['teachers', 'administrators', 'students']\n     *  redirect:{\n     *    'students': '/student',\n     *    'teachers': '/teacher',\n     *    'administrators': '/admin',\n     *   }\n     * })\n     * \n   **/\n  initialize(config:AuthConfig){\n    this.config = config;\n    if(this.config.authMessages == undefined){\n      this.config.authMessages = {};\n    }\n    this.authForm = {};\n    const role = this.accountLoggedIn();\n    if(role!=null){\n      this.router.navigate([this.config?.redirect[role]]);\n    }\n  }\n\n  validateInputFields():boolean{\n    var hasErrors = false;\n    for(const key of Object.keys(this.authForm)){\n      const { value, validator, required } = this.authForm[key];\n      if(required && value.trim() ==''){\n        this.authForm[key].error = 'This field is required!';\n        hasErrors = true;\n      }else{\n        if (validator) {\n          // check if validator is not custom\n          if(this.validators[validator] == null){\n              try {\n                  const regex =  new RegExp(validator);\n                  const isValid = regex.test(value);\n                  if(!isValid){\n                    this.authForm[key].error = `${key.charAt(0).toUpperCase() + key.slice(1)} is not a valid input.`;\n                    hasErrors = true;\n                  }else{\n                    this.authForm[key].error = undefined;\n                  }\n              } catch {\n                alert('Custom validator should be on regex');\n                return false;\n              }\n          \n          }\n\n          const regex = new RegExp(this.validators[validator].pattern);\n          const isValid = regex.test(value);\n          \n\n          if (!isValid) {\n            this.authForm[key].error = this.validators[validator].message;\n            hasErrors = true;\n          }else{\n            this.authForm[key].error = undefined;\n          }\n        } else {\n            this.authForm[key].error = undefined;\n        }\n      }\n      \n    }\n    return !hasErrors;\n  }\n\n  clearForm(){\n    for(const key of Object.keys(this.authForm)){\n        this.authForm[key].value = '';\n        this.authForm[key].error = undefined;\n    }\n  }\n  \n  /**\n     * Check if user is authenticated\n     * \n     * @example\n     * const role = this.auth.accountLoggedIn()\n     * \n     * OUTPUT: role of user if authenticated, null if unauthenticated\n   **/\n  accountLoggedIn() {\n    return this.usedStorage.getItem('logged_in');\n  }\n\n  logout() {\n    if (!this.accountLoggedIn()) {\n      return;\n    }\n    this.usedStorage.clear();\n    this.snackbarFeedback = undefined;\n    this.snackbarFeedback = this.snackbarFeedback = {\n      'type':'success',\n      'message': this.config?.authMessages!.loggedOut ?? 'Account has been logged out.',\n    }\n    this.router.navigate(['/']);\n  }\n\n\n  getAuthField(key:string){\n    return this.authForm[key];\n  }\n  \n  initializeFormField(key:string, required:boolean , unique:boolean, type:string, aliases?:string[], encrypted?:boolean,validator?:string){\n    this.authForm[key]= {value:'', validator:validator, required:required, type:type, aliases:aliases,encrypted:encrypted,unique:unique};\n  }\n\n  handleFormValue(key:string, value:string){\n    this.authForm[key].value = value;\n  }\n\n  isLocalStorage() {\n    const storage = localStorage.getItem('storage');\n    return storage == 'local';\n    \n  }\n\n  getSavedEmail() {\n    const email = localStorage.getItem('remember');\n    return email;\n  }\n\n  useLocalStorage() {\n    localStorage.setItem('storage', 'local');\n  }\n\n  useSessionStorage() {\n    localStorage.setItem('storage', 'session');\n  }\n\n  post(method: string, body: {}) {\n    if(this.config == undefined){\n      alert('Config must be initialized, try service.initialize(config)');\n    }\n    for (var [key, obj] of Object.entries<any>(body)) {\n      if (key == 'values') {\n        for (var [field, value] of Object.entries(obj)) {\n          obj[field] = value ?? '';\n        }\n      }\n    }\n    const headers = new HttpHeaders({\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/json',\n    });\n    const salt = new Date().getTime();\n    return this.http.post<any>(\n      this.config?.api + '?' + salt,\n      JSON.stringify(\n        Object.assign(\n          {\n            API_KEY: this.config?.apiKey,\n            Method: method,\n            App: this.config?.app\n          },\n          body\n        )\n      ),\n      { headers }\n    );\n  }\n  async hash(encrypt:string){\n    const response =  await firstValueFrom(this.post('get_hash', {encrypt: encrypt}))\n    if(response.success){\n      return response.output;\n    }else{\n      return null;\n    }\n  }\n\n  async checkDuplicates(tables:string[], values:{[key:string]:string}){\n    const response = await firstValueFrom(this.post('check_duplicates',{'tables': tables, 'values':values}))\n    if(response.success){\n      return response.output;\n    }else{\n      return null;\n    }\n  }\n\n\n\n  async register() {\n    if(this.loading){\n      return;\n    }\n    if(this.config?.registrationTable == undefined){\n      alert('Registration table must be initialized.');\n      return;\n    }\n\n    if(!this.validateInputFields()){\n      return;\n    }\n    this.loading = true;\n    this.snackbarFeedback = {\n      'type':'neutral',\n      'message':'Loading...',\n      isInfinite:true,\n    }\n\n    // check duplicates\n    const newDate = new Date().getTime().toString();\n    var visID;\n    if(this.config?.visibleID){\n      visID = `${this.config.visibleID}-` + newDate.substring(4, 7) + '-' + newDate.substring(7, 13);\n    }\n    const authFields = Object.keys(this.authForm);\n\n    var values:any ={};\n\n    for(let field of authFields){\n      let value = this.authForm[field].value;\n      if(this.authForm[field].encrypted){\n        const hash = await this.hash(value);\n        if(hash){\n          value = hash\n        }else{\n          this.snackbarFeedback = {\n            type: 'error',\n            message: 'Something went wrong, try again later...',\n          }\n          return;\n        }\n      }\n      if(this.authForm[field].unique){\n        const hasDuplicate = await this.checkDuplicates(this.config.loginTable, {[field]: this.authForm[field].value})\n        if(hasDuplicate != null){\n          if(hasDuplicate){\n              this.snackbarFeedback = {\n                type: 'error',\n                message: `${field.toUpperCase()} already exists.`,\n              }\n              return;\n          }\n        }else{\n          this.snackbarFeedback = {\n            type: 'error',\n            message: 'Something went wrong, try again later...',\n          }\n          return;\n        }\n      }\n        \n      values[field] =value;\n    }\n    \n    const postObject = \n       Object.assign(visID != null ? {visibleid:visID}:{}, this.config.verification ? {verified:false}:{}, {accountType: this.config.registrationTable},\n        values\n       ); \n       \n    this.post('register', \n      {data:JSON.stringify(postObject)},\n    ).subscribe((data:any)=>{\n      this.loading =false;\n      this.snackbarFeedback = undefined;\n      if(data.success){\n        // show proper snackbar\n        if(this.config?.verification){\n          // wait for verification\n          this.snackbarFeedback = {\n            type: 'success',\n            message: this.config?.authMessages!.forVerification ?? 'Please wait for account verification...'\n          }\n        }else{  \n          // successfully registered!`\n          this.snackbarFeedback = {\n            type: 'success',\n            message: this.config?.authMessages!.registered ?? 'Registration was successful, you may now login with your credentials'\n          }\n          this.clearForm();\n        }\n      }else{\n        alert(data.output)\n      }\n    });\n  }\n\n  closeSnackbar(){\n    this.snackbarFeedback = undefined;\n  }\n  \n  login() {\n    if(this.loading){\n      return;\n    }\n    if(this.config?.loginTable == undefined){\n      alert('Login table must be initialized.');\n      return;\n    }\n    // check if username and password fields are present\n    if(this.authForm['identifier']==null || this.authForm['password'] == null){\n      alert('Please initialize identifier and password fields using [name]=\"field\"');\n      return;\n    }\n\n    if(this.authForm['identifier'].aliases == undefined || this.authForm['identifier'].aliases.length <=0){\n      alert(\"Identifier field must be initialized with aliases=[aliases]\");\n      return;\n    }\n\n    if(!this.validateInputFields()){\n      return;\n    }\n    this.loading = true;\n    this.snackbarFeedback = undefined;\n    this.snackbarFeedback = {\n      'type':'neutral',\n      'message':'Loading...',\n      isInfinite:true,\n    }\n    return this.post('login', {\n      identifierValue: this.authForm['identifier'].value,\n      password: this.authForm['password'].value,\n      tables: this.config.loginTable,\n      identifierTypes:this.authForm['identifier'].aliases\n    }).subscribe((data:any) => {\n      this.snackbarFeedback = undefined;\n      this.snackbarFeedback = data.success ? {\n        type: 'success',\n        message: this.config?.authMessages!.loggedIn ?? 'Login Successful!'\n      } : {\n        type: 'error',\n        message:data.output\n      };\n      if (data.success) {\n        const user = data.output;\n        // add delay\n        if(this.timeout){\n          clearTimeout(this.timeout);\n        }\n        this.timeout = setTimeout(()=>{\n          this.usedStorage.setItem(\n            'logged_in',\n            user.role\n          );\n          this.usedStorage.setItem('user_info', JSON.stringify(user));\n          this.router.navigate([this.config?.redirect[user.role]]);\n          this.loading = false;\n        },this.config?.loginTimeout ?? 1500)\n      }else{\n        // alert(data.output)\n        this.snackbarFeedback = {\n          type: 'error',\n          message: data.output\n        };\n        this.loading = false;\n      }\n    });\n\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-login-button',\n  templateUrl: './uswagon-login-button.component.html',\n  styleUrls: ['./uswagon-login-button.component.css']\n})\nexport class UswagonLoginButtonComponent {\n  @Input() class:string ='';\n\n  constructor(private API:UswagonAuthService){}\n  \n\n  login(){\n    this.API.login();\n  }\n\n  isLoading(){\n    return this.API.loading;\n  }\n  \n \n}\n","<button [disabled]=\"isLoading()\" [class]=\"class + ' uswagon-login-button'\" (click)=\"login()\">\n    <ng-content></ng-content>\n</button>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-auth-input',\n  templateUrl: './uswagon-auth-input.component.html',\n  styleUrls: ['./uswagon-auth-input.component.css']\n})\nexport class UswagonAuthInputComponent implements OnInit {\n  @Input() name:string | undefined;\n  @Input() required:boolean = false;\n  @Input() validator?:string;\n  @Input() type:string = 'text';\n  @Input() unique:boolean = false;\n  @Input() aliases?:string[];\n  @Input() encrypted:boolean = false;\n  @Input() class:string = '';\n  constructor(private API:UswagonAuthService){}\n  ngOnInit(): void {\n    if(this.name==undefined){\n      alert('Uswagon Input Component must have a [name]=\"value\" property')\n      throw new Error('Uswagon Input Component must have a [name]=\"value\" property')\n    }\n    this.API.initializeFormField(this.name, this.required,this.unique,this.type, this.aliases, this.encrypted , this.validator);\n  }\n\n  getInput(){\n    return this.API.getAuthField(this.name!).value\n  }\n\n  handleInput(event: any) {\n    this.API.handleFormValue(this.name!, event.target.value)\n  }\n}\n","<input [value]=\"getInput()\" [class]=\"class + ' uswagon-auth-input'\" [type]=\"type\" (change)=\"handleInput($event)\">","import { Component, Input, OnInit } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-auth-input-error',\n  templateUrl: './uswagon-auth-input-error.component.html',\n  styleUrls: ['./uswagon-auth-input-error.component.css']\n})\nexport class UswagonAuthInputErrorComponent implements OnInit {\n  \n  @Input() name:string|undefined;\n  @Input() class:string ='';\n  @Input() hiddenClass:string='';\n  constructor(private API:UswagonAuthService){}\n\n\n  ngOnInit(): void {\n    if(this.name==undefined){\n      alert('Uswagon Input Component must have a [name]=\"value\" property')\n      throw new Error('Uswagon Input Component must have a [name]=\"value\" property')\n    }\n    const field = this.API.getAuthField(this.name)\n    if(field == null){\n      alert('Uswagon Input Error Component must be connected to a text field with [name]=\"value\" property')\n      throw new Error('Uswagon Input Error Component must be connected to a text field with [name]=\"value\" property')\n    }\n  }\n\n  hasError(){\n    return this.API.getAuthField(this.name!).error != null;\n  }\n\n  getErrorMessage(){\n    return this.API.getAuthField(this.name!).error;\n  }\n\n  \n}\n","<div [hidden]=\"!hasError() && hiddenClass.trim() != ''\" [class]=\"class + ' uswagon-auth-input-error'\">{{getErrorMessage()}}\n    <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'lib-uswagon-remember-me',\n  templateUrl: './uswagon-remember-me.component.html',\n  styleUrls: ['./uswagon-remember-me.component.css']\n})\nexport class UswagonRememberMeComponent {\n  constructor(private API:UswagonAuthService){}\n  persistent:boolean = this.API.isLocalStorage();\n  togglePersistentLogin(){\n    this.persistent = !this.persistent;\n    if(this.persistent){\n      this.API.useLocalStorage();\n    } else{\n      this.API.useSessionStorage();\n    }\n  }\n\n}\n","<input type=\"checkbox\" [value]=\"persistent\" (click)=\"togglePersistentLogin()\">\n","import { Component, Input } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n\n@Component({\n  selector: 'uswagon-register-button',\n  templateUrl: './uswagon-register-button.component.html',\n  styleUrls: ['./uswagon-register-button.component.css']\n})\nexport class UswagonRegisterButtonComponent {\n  @Input() class:string ='';\n\n  constructor(private API:UswagonAuthService){}\n  \n\n  register(){\n    this.API.register();\n  }\n\n  isLoading(){\n    return this.API.loading;\n  }\n}\n","<button [disabled]=\"isLoading()\" [class]=\"class\" (click)=\"register()\">\n    <ng-content></ng-content>\n</button>","import { Component, Input } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-auth-snackbar-close',\n  templateUrl: './uswagon-auth-snackbar-close.component.html',\n  styleUrls: ['./uswagon-auth-snackbar-close.component.css']\n})\nexport class UswagonAuthSnackbarCloseComponent {\n  @Input() class:string = '';\n  @Input() errorClass:string ='';\n  @Input() successClass:string ='';\n  constructor(private API:UswagonAuthService){}\n  getSnackbarFeedback(){\n    return this.API.snackbarFeedback;\n  }\n\n  close(){\n    return this.API.closeSnackbar();\n  }\n}\n","<button   [class]=\"'uswagon-snackbar-close '+ class +' '+ getSnackbarFeedback()?.type == 'error'? errorClass : successClass\" (click)=\"close()\">x</button>","import { Component, Input } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-auth-snackbar-container',\n  templateUrl: './uswagon-auth-snackbar-container.component.html',\n  styleUrls: ['./uswagon-auth-snackbar-container.component.css']\n})\nexport class UswagonAuthSnackbarContainerComponent {\n  @Input() class:string ='';\n  @Input() errorClass:string ='';\n  @Input() successClass:string ='';\n  @Input() hiddenClass:string = '';\n  @Input() timer:number = 2000;\n  @Input() isInfinite:boolean = false;\n  constructor(private API:UswagonAuthService){}\n\n  timeout:any;\n\n  getSnackbarFeedback(){\n    const feedback = this.API.snackbarFeedback;\n    \n    if (feedback !== undefined && (!this.isInfinite && !feedback.isInfinite)) {\n      if(this.timeout){\n        clearTimeout(this.timeout);\n      }\n      // Set a timer to reset the snackbar feedback after 2 seconds\n      this.timeout = setTimeout(() => {\n        this.API.snackbarFeedback = undefined;\n      }, this.timer);\n    }\n\n    return feedback;\n  }\n}\n","<div [hidden]=\"getSnackbarFeedback()==undefined && hiddenClass.trim()==''\" class=\"{{getSnackbarFeedback() == undefined ? hiddenClass :'uswagon-snackbar-container ' + class+' '+getSnackbarFeedback()?.type == 'error'? errorClass : successClass}}\">\n   <ng-content></ng-content>\n</div>","import { Component, Input } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-auth-snackbar-content',\n  templateUrl: './uswagon-auth-snackbar-content.component.html',\n  styleUrls: ['./uswagon-auth-snackbar-content.component.css']\n})\nexport class UswagonAuthSnackbarContentComponent {\n  @Input() class:string ='';\n  @Input() errorClass:string ='';\n  @Input() successClass:string ='';\n  constructor(private API:UswagonAuthService){}\n  getSnackbarFeedback(){\n    return this.API.snackbarFeedback;\n  }\n}\n","<div [class]=\"'uswagon-snackbar-content '+ class + ' ' + ( getSnackbarFeedback() == undefined ? ' ':  getSnackbarFeedback()!.type != 'neutral' ? (getSnackbarFeedback()!.type  == 'error'? errorClass : successClass) : ' ')\">\n    {{getSnackbarFeedback()?.message}}\n</div>\n","import { Component, Input } from '@angular/core';\nimport { UswagonAuthService } from '../uswagon-auth.service';\n\n@Component({\n  selector: 'uswagon-logout-button',\n  templateUrl: './uswagon-logout-button.component.html',\n  styleUrls: ['./uswagon-logout-button.component.css']\n})\nexport class UswagonLogoutButtonComponent {\n  @Input() class:string ='';\n\n  constructor(private API:UswagonAuthService){}\n  \n\n  logout(){\n    this.API.logout();\n  }\n}\n","<button [class]=\"class + ' uswagon-logout-button'\" (click)=\"logout()\">\n    <ng-content></ng-content>\n</button>\n\n","import { NgModule } from '@angular/core';\nimport { UswagonLoginButtonComponent } from './uswagon-login-button/uswagon-login-button.component';\nimport { UswagonRegisterButtonComponent } from './uswagon-register-button/uswagon-register-button.component';\nimport { UswagonAuthInputComponent } from './uswagon-auth-input/uswagon-auth-input.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UswagonRememberMeComponent } from './uswagon-remember-me/uswagon-remember-me.component';\nimport { UswagonAuthInputErrorComponent } from './uswagon-auth-input-error/uswagon-auth-input-error.component';\nimport { UswagonAuthSnackbarContentComponent } from './uswagon-auth-snackbar-content/uswagon-auth-snackbar-content.component';\nimport { UswagonAuthSnackbarContainerComponent } from './uswagon-auth-snackbar-container/uswagon-auth-snackbar-container.component';\nimport { UswagonAuthSnackbarCloseComponent } from './uswagon-auth-snackbar-close/uswagon-auth-snackbar-close.component';\nimport { UswagonLogoutButtonComponent } from './uswagon-logout-button/uswagon-logout-button.component';\n\n@NgModule({\n  declarations: [\n    UswagonLoginButtonComponent,\n    UswagonRegisterButtonComponent,\n    UswagonAuthInputComponent,\n    UswagonRememberMeComponent,\n    UswagonAuthInputErrorComponent,\n    UswagonAuthSnackbarContentComponent,\n    UswagonAuthSnackbarContainerComponent,\n    UswagonAuthSnackbarCloseComponent,\n    UswagonLogoutButtonComponent,\n  ],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [\n    UswagonLogoutButtonComponent,\n    UswagonAuthSnackbarContentComponent,\n    UswagonAuthSnackbarContainerComponent,\n    UswagonAuthSnackbarCloseComponent,\n    UswagonLoginButtonComponent,\n    UswagonRegisterButtonComponent,\n    UswagonAuthInputComponent,\n    UswagonRememberMeComponent,\n    UswagonAuthInputErrorComponent,\n  ]\n})\nexport class UswagonAuthModule { }\n","export interface AuthRedirect {\r\n  [role: string]: string;\r\n}\r\n\r\nexport interface AuthMessages{\r\n  loggedIn?:string;\r\n  loggedOut?:string;\r\n  registered?:string;\r\n  forVerification?:string;\r\n}\r\nexport interface SnackbarFeedback {\r\n  type: 'success'|'error'|'neutral';\r\n  isInfinite?: boolean;\r\n  message:string;\r\n}\r\nexport interface AuthFormField {\r\n  value: any;\r\n  required: boolean;\r\n  unique: boolean;\r\n  type: string;\r\n  error?:string;\r\n  validator?: string;\r\n  encrypted?:boolean;\r\n  aliases?: string[];\r\n}\r\nexport interface AuthForm {\r\n    [key: string]: AuthFormField;\r\n}\r\nexport interface AuthConfig {\r\n    api:string;\r\n    apiKey:string;\r\n    verification?:boolean;\r\n    loginTable:string[];\r\n    registrationTable?:string;\r\n    redirect:AuthRedirect;\r\n    visibleID?:string;\r\n    authMessages?:AuthMessages;\r\n    loginTimeout?:number;\r\n    app:string;\r\n}\r\ninterface AuthValidatorConfig {\r\n  pattern: string;\r\n  message: string;\r\n}\r\nexport interface AuthValidator {\r\n  [key: string]: AuthValidatorConfig;\r\n};\r\n","/*\n * Public API Surface of uswagon-auth\n */\n\nexport * from './lib/uswagon-auth.service';\nexport * from './lib/uswagon-login-button/uswagon-login-button.component';\nexport * from './lib/uswagon-auth-input/uswagon-auth-input.component';\nexport * from './lib/uswagon-auth-input-error/uswagon-auth-input-error.component';\nexport * from './lib/uswagon-remember-me/uswagon-remember-me.component';\nexport * from './lib/uswagon-register-button/uswagon-register-button.component';\nexport * from './lib/uswagon-auth-snackbar-close/uswagon-auth-snackbar-close.component';\nexport * from './lib/uswagon-auth-snackbar-container/uswagon-auth-snackbar-container.component';\nexport * from './lib/uswagon-auth-snackbar-content/uswagon-auth-snackbar-content.component';\nexport * from './lib/uswagon-logout-button/uswagon-logout-button.component';\n\n\nexport * from './lib/uswagon-auth.module';\n\nexport * from './lib/types/uswagon-auth.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.UswagonAuthService"],"mappings":"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"}